root_dir: .
exp_dir: !ref <root_dir>/exp
model_dir: ../models

datasets:
  - name: libri_dev
    data: libri
    set: dev
    enrolls: [enrolls]
    trials: [trials_f, trials_m]
  - name: libri_test
    data: libri
    set: test
    enrolls: [enrolls]
    trials: [trials_f, trials_m]
  - name: vctk_dev
    data: vctk
    set: dev
    enrolls: [enrolls]
    trials: [trials_f, trials_m]
  - name: vctk_dev_common
    data: vctk
    set: dev
    enrolls: [enrolls]
    trials: [trials_f_common, trials_m_common]
  - name: vctk_test
    data: vctk
    set: test
    enrolls: [enrolls]
    trials: [trials_f, trials_m]
  - name: vctk_test_common
    data: vctk
    set: test
    enrolls: [enrolls]
    trials: [trials_f_common, trials_m_common]

eval_steps:  # all metrics in this list will be computed in the evaluation. Remove entry to skip
  privacy:
   - asv
  utility:
   - asr
   - gvd

anon_data_suffix: dsp # suffix for dataset to signal that it is anonymized
eval_data_dir: data  # path to anonymized evaluation data in kaldi format, e.g. <eval_data_dir>/libri_test_enrolls/wav.scp etc.

privacy:
  asv:
    model_dir: !ref <exp_dir>/asv_anon_<privacy[asv][vec_type]>_ft  # path to existing ASV model or output for trained ASV model
    vec_type: ecapa  # ecapa or xvector

    training:
      anon: true  # true or false, depending on whether the training data for the ASV is anonymized or original
      train_data_dir: !ref <eval_data_dir>/train-clean-360-part_dsp # path to original or anonymized training data for ASV
      train_config: evaluation/privacy/asv/asv_train/hparams/train_ecapa_tdnn_small_ft.yaml
      finetuning: true # true (ft) or false (scratch)
      pretrained_model: exp/asv_pre_ecapa/ # path to pretrained model, only used for finetuning
      lr: 0.01
      epochs: 10
      batch_size: 256
      num_utt: ALL  # ALL or specific number, number of utterances per speaker
      utt_selection: spk-diverse-sess  # select utterances per speaker and session (spk-sess), per speaker and randomly across all sessions (spk-random), per speaker and balanced across sessions (spk-diverse-sess)
      num_spk: ALL  # ALL or specific number, number of speakers
      retrain: true  # retrain in any case (true) or skip training if model exists (false)

    evaluation:
      results_dir: !ref <privacy[asv][model_dir]>  # path to save evaluation results
      distance: cosine  # cosine or plda
      plda:   # ignored if distance is not plda
        model_dir: null  # path to trained PLDA or output of PLDA training
        train_data_dir: null # path to PLDA training data
        anon: !ref <privacy[asv][training][anon]>  # trained on anonymized (true) or original (false) data


utility:
  asr:
    model_name: post_asr_sb_ft # name for ASR model
    backend: speechbrain

    training:
      model_dir: !ref <exp_dir>/<utility[asr][model_name]>  # path to existing ASR model or output for trained ASR model
      pretrained_model: exp/asr_pre_sb/CKPT+100
      backend: speechbrain
      lr: 0.001
      batch_size: 32 # 1GPU 40GB
      epochs: 100
      anon: true
      train_splits: !ref train-clean-360-part_<anon_data_suffix> # datadir name of part anonymized training data for ASR
      train_data_dir: !ref <eval_data_dir>/ # path to original or anonymized training data for ASV
      train_config: evaluation/utility/asr/speechbrain_asr/asr_train/hparams/transformer_ft.yaml
    
    evaluation:
      model_dir: !ref <exp_dir>/<utility[asr][model_name]>
      results_dir: !ref <exp_dir>/<utility[asr][model_name]>

  gvd:
    num_utt: all  # all or specific number, number of utterances per speaker
    asv_params:  # settings for ASV using for GVD evaluation
      model_dir: !ref <privacy[asv][model_dir]>
      vec_type: !ref <privacy[asv][vec_type]>
      evaluation:
        plda: !ref <privacy[asv][evaluation][plda]>
        distance: !ref <privacy[asv][evaluation][distance]>
    results_dir: !ref <privacy[asv][model_dir]>  # path to results dir for GVD computation
    recompute: false  # recompute similarity matrices in any case (true) or skip if matrices exist (false)
